#!/bin/bash

function error {
	>&2 echo -e "$*"
}
function fatal {
	>&2 echo -e "$*"
	exit 1
}
function macgyver {
	for f in Mac*.mkv; do
		echo "### subtitler --extract -i \"$f\""
		subtitler --extract -i "$f"
	done
}

function extract_subtitles {
	output_dir="$INPUTFILE_DIR/$INPUTFILENAME_WITHOUT_EXTENSION"
	output_file="${output_dir}/${INPUTFILE_BASENAME}"

	echo "Extracting subtitles from: $INPUTFILE"
	file_info=$(ffprobe -hide_banner -of csv "$INPUTFILE" 2>&1) || fatal "Failed to resolve file info usinf ffprobe. Output: \n$file_info"
	# File will look like: "  Stream #0:2(eng): Subtitle: ass"
	[ -n "$VERBOSE" ] && echo -e "ffprobe result: \n$file_info"
	subtitles=$(echo "$file_info" | grep -i stream | grep -i subtitle)

	if [ -z "$subtitles" ]; then
		error "$INPUTFILE does not contain any subtitles."
		[ -z "$IGNORE_NOT_FOUND" ] && fatal

		mkdir -p -v "$output_dir"
		mv -v "$INPUTFILE" "$output_file"
		exit 0
	fi

	echo -e "Found subtitles:\n$subtitles"
	subtitles=$(echo "$subtitles" | grep -v 'dv[db]_subtitle' | sed -E 's/.*#([0-9]+:[0-9]+)\(([a-z]+)\).*/\1|\2/g')
	mkdir -p -v "$output_dir"
	
	if [ -n "$subtitles" ]; then
		extract_subtitles_to "$subtitles" "$output_dir"
		echo "Extraction complete, removing embedded subtitles."
	else
		error "Only image based subtitles found. Deleting them anyway."
	fi

	echo "Creating new file without subtitles: $output_file"
	echo "ffmpeg -i \"$INPUTFILE\" -sn -c copy \"$output_file\""
	ffmpeg -loglevel warning -i "$INPUTFILE" -sn -c copy "$output_file" || fatal "Failed to remove subtitles"
	rm -v "$INPUTFILE"
}

function extract_subtitles_to {
	local subtitles output_dir stream lang output_file
	subtitles=$1
	output_dir=$2
	mkdir -p -v "$output_dir"

	for subtitle in $subtitles; do
		stream=$(echo "$subtitle" | cut -d'|' -f1)
		lang=$(echo "$subtitle" | cut -d'|' -f2)
		output_file="$output_dir/${INPUTFILENAME_WITHOUT_EXTENSION}.${lang}.srt"
		echo "Extracting $output_file"
		[ -f "$output_file" ] && fatal "Output file already exists: $output_file"

		echo "ffmpeg -i \"$INPUTFILE\" -map \"$stream\" -c srt \"$output_file\""

		ffmpeg -loglevel warning -i "$INPUTFILE" -map "$stream" -c srt "$output_file" || fatal "Failed to extract subtitles"
		scrub_subtitle "$output_file"
	done
}

function remove_subtitles {
	output_file="${INPUTFILE_DIR}/${INPUTFILE_BASENAME}"

	echo "Creating new file without subtitles: $output_file"
	echo "ffmpeg -i \"$INPUTFILE\" -sn -c copy \"$output_file\""
	ffmpeg -loglevel warning -i "$INPUTFILE" -sn -c copy "$output_file" || fatal "Failed to remove subtitles"
	rm -v "$INPUTFILE"
}

function scrub_subtitle {
	input=$1
	echo "Scrubbing subtitle: $input"
	
	# Remove fonts
	sed -i -E 's/<\/?font[^>]*>//g' "$input"
	
	# Remove everything within square brackets
	sed -i -z -E 's/\[[^]]+\]//g' "$input"

	# Remove Capitals followed by colon
	sed -i -z -E 's/[A-Z]{2}+[A-Z0-9 ]*\s?: *\n?//g' "$input"
}

while [ $# -gt 0 ]; do
	case $1 in
		--remove)
			COMMAND=remove
			;;
		--extract)
			COMMAND=extract
			;;
		--scrub)
			COMMAND=scrub
			;;
		-i|--input)
			INPUTFILE=$2
			shift 1
			;;
		--ignore-not-found)
			IGNORE_NOT_FOUND=true
			;;
		-v|--verbose)
			VERBOSE=true
			;;
		*) 
			fatal "Unexpected parameter: $1"
			;;
	esac
	shift
done

[ -z "$COMMAND" ] && fatal "No command specified."
[ -z "$INPUTFILE" ] && fatal "No input file specified."
[ ! -f "$INPUTFILE" ] && fatal "Input file does not exist: $INPUTFILE"

INPUTFILE_DIR=$(cd "$(dirname "$INPUTFILE")" && pwd)
INPUTFILE_BASENAME=$(basename "$INPUTFILE")
INPUTFILE="$INPUTFILE_DIR/$INPUTFILE_BASENAME"
INPUTFILENAME_WITHOUT_EXTENSION=${INPUTFILE_BASENAME%.*}

case $COMMAND in
	remove)
		remove_subtitles
		;;
	extract)
		extract_subtitles
		;;
	scrub)
		scrub_subtitle "$INPUTFILE"
		;;
	*)
		fatal "Unknown command: $COMMAND"
		;;
esac
