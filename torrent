#!/bin/bash

function get_all_torrent_ids {
	transmission-remote --list | sed '1d;$d' | awk '{print $1}'
}

function add_trackers {
	trackers=$1
	if [ -z "$trackers" ]; then
		echo "Please specify trackers"
		exit 1
	fi

	get_all_torrent_ids | while read torrent; do
		for tracker in $trackers; do
			if [ -n "$tracker" ]; then
				result=$(transmission-remote --torrent $torrent --tracker-add $tracker)
				echo "$torrent: $tracker: $result"
			fi
		done
	done
}
function add_torrent {
	torrentlink=${1:?'No torrent link specified'}
	if ! [[ $torrentlink =~ ^magnet ]]; then
		echo "Invalid magnet link: $torrentlink"
		exit 1
	fi
	transmission-remote --add "$torrentlink"
	if [ $? -ne 0 ]; then
		echo "Failed to add torrent with link: $torrentlink"
		exit 1
	fi
}
function remove_torrent {
	id=${1:?'No torrent id specified'}
	if ! get_all_torrent_ids | grep -qx "$id"; then
		echo "No such torrent id: $id"
		exit 1
	fi
	transmission-remote --torrent "$id" --remove
	if [ $? -ne 0 ]; then
		echo "Failed to remove torrent with id: $id"
		exit 1
	fi
}
function enter_container {
	local container_id=$(docker ps --filter "name=transmission-openvpn" -q)
	if [ -z "$container_id" ]; then
		echo "No running container found"
		exit 1
	fi
	echo "Entering container $container_id"
	docker exec -it "$container_id" /bin/bash
}
function update_container {
	echo "docker-compose --project-directory /etc/openvpn/docker up -d"
	docker-compose --project-directory "/etc/openvpn/docker" up -d
}

case "$1" in
	list)
		transmission-remote --list	
		;;
	add)
		add_torrent "$2"	
		;;
	rm)
		remove_torrent "$2";
		;;
	addtracker)
		add_trackers "$2" 
		;;
	status) 
		sudo systemctl status transmission-openvpn
		;;
	start|stop|restart) 
		sudo systemctl "$1" transmission-openvpn
		sudo systemctl status transmission-openvpn
		;;
	log)
		journalctl -e -o short-iso -u transmission-openvpn
		;;
	update-image)
		echo "/usr/local/bin/update-transmission-image.sh"
		/usr/local/bin/update-transmission-image.sh
		;;
	enter-container)
		enter_container
		;;
	update-container)
		update_container
		;;
	*)
		echo "Invalid parameter"
		exit 2
		;;
esac
